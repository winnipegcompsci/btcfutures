var OKCoin = require('okcoin');
var clc = require('cli-color');
var util = require('util');

var api_key = "a3df6a8b-2799-4988-9336-e4ce74b88408";
var secret = "C890A97000A0A5102CF6462F4F7BDCC1";

var public_client = new OKCoin();
var private_client = new OKCoin(api_key, secret);

/**
 * Public Functions Test 
 */
public_client.getTicker(function(err, resp) {
    if(err) {
        handleError('getTicker', err);
    } else {
        handlePass('getTicker', resp);
    }
    
}, 'btc_usd');

public_client.getFutureTicker(function(err, resp) {
    if(err) {
        handleError('getFutureTicker', err);
    } else {   
        handlePass('getFutureTicker', resp);
    }
    
}, 'btc_usd', 'quarter');

public_client.getDepth(function(err, resp) {
    if(err) {
        handleError('getDepth', err);
    } else {
        // Check if Size = 200.
        handlePass('getDepth', resp);
    }
}, 'btc_usd', 200);

public_client.getFutureDepth(function(err, resp) {
    if(err) {
        handleError('getFutureDepth', err);
    } else {
        // Check if Size = 200
        handlePass('getFutureDepth', resp);
    }
    
}, 'btc_usd', 'quarter', 200);

public_client.getFutureIndex(function(err, resp) {
    if(err) {
        handleError('getFutureIndex', err);
    } else {
        handlePass('getFutureIndex', resp);
    }
    
}, 'btc_usd');

public_client.getExchangeRate(function(err, resp) {
    if(err) {
        handleError('getExchangeRate', err);
    } else {
        handlePass('getExchangeRate', resp);
    }
});

public_client.getFutureEstimatedPrice(function(err, resp) {
    if(err) {
        handleError('getFutureEstimatedPrice', err);
    } else {
        handlePass('getFutureEstimatedPrice', resp);
    }
}, 'btc_usd');

public_client.getTrades(function(err, resp) {
    if(err) {
        handleError('getTrades', err);
    } else {  
        handlePass('getTrades', resp);
    }
}, 'btc_usd');

public_client.getFutureTrades(function(err, resp) {
    if(err) {
        handleError('getFutureTrades', err);
    } else {
        handlePass('getFutureTrades', resp);
    }
}, 'btc_usd', 'quarter');

public_client.getKline(function(err, resp) {
    if(err) {
        handleError('getKline', err);
    } else {   
        handlePass('getKline', resp);
    }
}, 'btc_usd', '5min', 100, 1417536000000);

public_client.getFutureKline(function(err, resp) {
    if(err) {
        handleError('getFutureKline', err);
    } else {    
        handlePass('getFutureKline', resp);
    }
    
}, 'btc_usd', '5min', 'quarter', 100, 1417536000000);

/*
public_client.getLendDepth(function(err, resp) {
    if(err) {
        handleError('getLendDepth', err);
    } else {    
        handlePass('getLendDepth', resp);
    }
}, 'btc_usd');
*/

public_client.getFutureHoldAmount(function(err, resp) {
    if(err) {
        handleError('getFutureHoldAmount', err);
    } else {
        handlePass('getFutureHoldAmount', resp);
    }
}, 'btc_usd', 'quarter');


/** 
 * Private Functions Test 
 */
 
private_client.getUserInfo(function(err, resp) {
    if(err) {
        handleError('getUserInfo', err);
    } else {
        handlePass('getUserInfo', resp);
    }
});

private_client.getFutureUserInfo(function(err, resp) {
    if(err) {
        handleError('getFutureUserInfo', err);
    } else {
        handlePass('getFutureUserInfo', resp);
    }
});

private_client.addTrade(function(err, resp) {
    if(err) {
        handleError('addTrade', err);
    } else {
        handlePass('addTrade', resp);
    }
    
}, 'btc_usd', 'buy', 1, 280.00);

private_client.addFutureTrade(function(err, resp) {
    if(err) {
        handleError('addFutureTrade', err);
    } else {    
        handlePass('addFutureTrade', resp);
    }
    
}, 'btc_usd', 'quarter', 1, 280.00, 1, 0, 20);

private_client.addBatchTrades(function(err, resp) {
    if(err) {
        handleError('addBatchTrades', err);
    } else {
        handlePass('addBatchTrades', resp);
    }
    
}, 'btc_usd', 'buy', "[{price:3,amount:5,type:'sell'},{price:3,amount:3,type:'buy'}]");

private_client.cancelOrder(function(err, resp) {
    if(err) {
        handleError('cancelOrder', err);
    } else {
        handlePass('cancelOrder', resp);
    }
}, 'btc_usd', 10523);

private_client.cancelFutureOrder(function(err, resp) {
    if(err) {
        handleError('cancelFutureOrder', err);
    } else {    
        handlePass('cancelFutureOrder', resp);
    }
}, 'btc_usd', 'quarter', 10523);

private_client.getOrderInfo(function(err, resp) {
    if(err) {
        handleError('getOrderInfo', err);
    } else {    
        handlePass('getOrderInfo', resp);
    }
}, 'btc_usd', 10523);

private_client.getOrdersInfo(function(err, resp) {
    if(err) {
        handleError('getOrdersInfo', err);
    } else {    
        handlePass('getOrdersInfo', resp);
    }
}, 'btc_usd', 0, 10523);

private_client.getFutureOrderInfo(function(err, resp) {
    if(err) {
        handleError('getFutureOrderInfo', err);
    } else {    
        handlePass('getFutureOrderInfo', resp);
    }
}, 'btc_usd', 'quarter', 1, -1, 1, 50);

private_client.getFutureOrdersInfo(function(err, resp) {
    if(err) {
        handleError('getFutureOrdersInfo', err);
    } else {    
        handlePass('getFutureOrdersInfo', resp);
    }
}, 'btc_usd', 'quarter', 10523);

private_client.getFuturePositions(function(err, resp) {
    if(err) {
        handleError('getFuturePositions', err);
    } else {
        handlePass('getFuturePositions', resp);
    }
}, 'btc_usd', 'quarter');

private_client.getFixedFuturePositions(function(err, resp) {
    if(err) {
        handleError('getFixedFuturePositions', err);
    } else {
        handlePass('getFixedFuturePositions', resp);
    }
}, 'btc_usd', 'quarter', 1);

private_client.getFixedUserInfo(function(err, resp) {
    if(err) {
        handleError('getFixedUserInfo', err);
    } else {
        handlePass('getFixedUserInfo', resp);
    }
});

private_client.getAccountRecords(function(err, resp) {
    if(err) {
        handleError('getAccountRecords', err);
    } else {
        handlePass('getAccountRecords', resp);
    }
}, 'btc_usd', 0, 1, 50);

private_client.getOrderHistory(function(err, resp) {
    if(err) {
        handleError('getOrderHistory', err);
    } else {
        handlePass('getOrderHistory', resp);
    }
}, 'btc_usd', 0, 1, 50);

private_client.addWithdraw(function(err, resp) {
    if(err) {
        handleError('addWithdraw', err);
    } else {
        handlePass('addWithdraw', resp);
    }
}, 'btc_usd', 0, 'password', 'someaddress', 1.0);

private_client.cancelWithdraw(function(err, resp) {
    if(err) {
        handleError('cancelWithdraw', err);
    } else {
        handlePass('cancelWithdraw', resp);
    }
}, 'btc_usd', 12358);


/**
 * Output Functions
 */
function handleError(functionName, err) {    
    console.log(clc.red('Error: [' + functionName + ']: \n\t%s'), err);
}

function handlePass(functionName, resp) {
    console.log(clc.green('Passed: [' + functionName + ']'));
}